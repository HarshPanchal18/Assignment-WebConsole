@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@section Styles
{
    <link rel="stylesheet" href="/monaco/min/vs/editor.main.css"/>
}

<div class="editor-container">

    <div class="editor-toolbar">

        @* <label for="languageSelector">Select Language: </label> *@
        <select id="languageSelector" class="lang-picker">
            <option value="javascript">JavaScript</option>
            <option value="python">Python</option>
            <option value="java">Java</option>
            <option value="cpp">C++</option>
            <option value="csharp">C#</option>
        </select>

        <div class="separator"></div>

        <button id="submitCode">Submit</button>
    </div>

    <div id="editor" class="code-editor"></div>

</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/loader.js"></script>
    <script>
        require.config({
            paths: { "vs": "https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs" }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/editor/editor.main.nls.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/editor/editor.main.js"></script>

    <script>
        window.onload = function () {

            // Boilerplate code for different languages
            const boilerplateCode = {
                javascript: `console.log("Hello, world!");`,

                python: `print("Hello, world!")`,

                java:
`public class Program {
    public static void main(String[] args) {
        System.out.println("Hello, world!");
    }
}`,

                cpp: 
`#include <iostream>
int main() {
    std::cout << "Hello, world!" << std::endl;
    return 0;
}`,

                csharp:
        `using System;

class Program {
    static void Main() {
        Console.WriteLine("Hello, world!");
    }
}`
            
                    };

            let monacoOptions = {
                language: "javascript",
                automaticLayout:true,
                // minimap: { editor : true },

                // Disable suggestions
                quickSuggestions: false,
                suggestOnTriggerCharacters: false,
                
                parameterHints: { enabled: false }, // Optionally disable parameter hints
                value: boilerplateCode.javascript,
            }

            window.monacoEditor = monaco.editor.create(document.getElementById("editor"), monacoOptions);

            // Handle language change
            document.getElementById('languageSelector').addEventListener('change', function (event) {
                var selectedLanguage = event.target.value;

                // Dynamically set the language of the editor based on selection
                monaco.editor.setModelLanguage(window.monacoEditor.getModel(), selectedLanguage);

                // Set editor content based on the selected language's boilerplate
                window.monacoEditor.setValue(boilerplateCode[selectedLanguage]);
            });
        }

    </script>

    <script>
        document.getElementById('submitCode').addEventListener('click', function () {
            // Ensure monacoEditor is initialized before trying to get the value
            if (window.monacoEditor) {
                var code = window.monacoEditor.getValue(); // Fetch code from editor

                const submission = {
                    AssignmentId: 1, // Replace with actual assignment ID
                    StudentId: 1,    // Replace with actual student ID
                    SubmissionDate: new Date().toISOString(), // Current date/time in ISO format
                    Content: window.monacoEditor.getValue(),
                    Language: document.getElementById("languageSelector").value,
                    IsSubmitted: true // Set based on your logic
                };

                // Send content to server-side method
                fetch('/Code/RunCode', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(submission)
                }).then(response => response.json())
                    .then(data => console.log('Success:', data))
                    .catch(error => console.error('Error:', error))

            } else {
                alert('Monaco Editor is not initialized yet');
            }
        });
    </script>

}