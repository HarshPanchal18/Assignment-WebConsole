@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@section Styles
{
    <link rel="stylesheet" href="/monaco/min/vs/editor.main.css"/>
}

<div>
    <label for="languageSelector">Select Language: </label>
    <select id="languageSelector">
        <option value="javascript">JavaScript</option>
        <option value="python">Python</option>
        <option value="java">Java</option>
        <option value="cpp">C++</option>
        <option value="csharp">C#</option>
    </select>
</div>

<div id="editor" style="height: 500px"></div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/loader.js"></script>
    <script>
        require.config({
            paths: { "vs": "https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs" }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/editor/editor.main.nls.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/editor/editor.main.js"></script>

    <script>
        window.onload = function () {

            // Boilerplate code for different languages
            const boilerplateCode = {
                javascript: `function helloWorld() {
                                console.log("Hello, world!");
                             }`,

                python: `def hello_world():
                            print("Hello, world!")`,

                java: `public class HelloWorld {
                            public static void main(String[] args) {
                                System.out.println("Hello, world!");
                            }
                        }`,

                cpp: `#include <iostream>

                      int main() {
                            std::cout << "Hello, world!" << std::endl;
                            return 0;
                      }`,

                csharp: `using System;

                        class Program {
                            static void Main() {
                                Console.WriteLine("Hello, world!");
                            }
                        }`
            
                    };

            let monacoOptions = {
                language: "javascript",
                automaticLayout:true,
                // minimap: { editor : true },
                value: boilerplateCode.javascript,
            }

            window.monacoEditor = monaco.editor.create(document.getElementById("editor"), monacoOptions);

            // Handle language change
            document.getElementById('languageSelector').addEventListener('change', function (event) {
                var selectedLanguage = event.target.value;

                // Dynamically set the language of the editor based on selection
                monaco.editor.setModelLanguage(window.monacoEditor.getModel(), selectedLanguage);

                // Set editor content based on the selected language's boilerplate
                window.monacoEditor.setValue(boilerplateCode[selectedLanguage]);
            });
        }

    </script>

    <button id="submitCode">Submit Code</button>

    <script>
        document.getElementById('submitCode').addEventListener('click', function () {
            // Ensure monacoEditor is initialized before trying to get the value
            if (window.monacoEditor) {
                var code = window.monacoEditor.getValue(); // Fetch code from editor

                // Send code to server using AJAX
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RunCode", "Code")', // controller action
                    data: { code: code },
                    success: function (response) {
                        alert('Code submitted successfully');
                    },
                    error: function () {
                        alert('An error occurred while submitting the code');
                    }
                });
            } else {
                alert('Monaco Editor is not initialized yet');
            }
        });
    </script>

}